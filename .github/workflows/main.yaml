name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # - uses: actions/checkout@v2
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag ship-and-notify-file-delivery:$(date +%s)

    # - uses: actions/checkout@v2
    # - name: Login to GCR
    #   run: aws ecr get-login-password --region eu-west-1 | docker login --username Aviv --password-stdin 288229864985.dkr.ecr.eu-west-1.amazonaws.com

    # - uses: actions/checkout@v2
    # - name: Create repo in GCR
    #   run: aws ecr create-repository --repository-name  --image-scanning-configuration scanOnPush=true --image-tag-mutability MUTABLE

    # - uses: actions/checkout@v2
    # - name: Tag the image
    #   run: docker tag  ship-and-notify-file-delivery:$(date +%s) 288229864985.dkr.ecr.eu-west-1.amazonaws.com/ship-and-notify-file-delivery:$(date +%s)

    # - uses: actions/checkout@v2
    # - name: Push the image
    #   run: docker push 288229864985.dkr.ecr.eu-west-1.amazonaws.com/ship-and-notify-file-delivery:$(date +%s) 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_USER_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_USER_ACCESS_KEY_SECRET }}
        aws-region: eu-west-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ship-and-notify-file-delivery
      run: |
        docker build . --tag $ECR_REGISTRY/$ECR_REPOSITORY:$(date +%s)
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(date +%s)

    # todo: pass the image as an artifact to the
    # todo: Terraform should be dependent on build stage

  terraform:

    name: 'Terraform'

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'plan '
          tf_actions_working_dir: '.'
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: '.'  
